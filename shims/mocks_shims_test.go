// Code generated by MockGen. DO NOT EDIT.
// Source: finalizer.go

// Package shims_test is a generated GoMock package.
package shims_test

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLifecycleDetectRunner is a mock of LifecycleDetectRunner interface
type MockLifecycleDetectRunner struct {
	ctrl     *gomock.Controller
	recorder *MockLifecycleDetectRunnerMockRecorder
}

// MockLifecycleDetectRunnerMockRecorder is the mock recorder for MockLifecycleDetectRunner
type MockLifecycleDetectRunnerMockRecorder struct {
	mock *MockLifecycleDetectRunner
}

// NewMockLifecycleDetectRunner creates a new mock instance
func NewMockLifecycleDetectRunner(ctrl *gomock.Controller) *MockLifecycleDetectRunner {
	mock := &MockLifecycleDetectRunner{ctrl: ctrl}
	mock.recorder = &MockLifecycleDetectRunnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLifecycleDetectRunner) EXPECT() *MockLifecycleDetectRunnerMockRecorder {
	return m.recorder
}

// RunLifecycleDetect mocks base method
func (m *MockLifecycleDetectRunner) RunLifecycleDetect() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunLifecycleDetect")
	ret0, _ := ret[0].(error)
	return ret0
}

// RunLifecycleDetect indicates an expected call of RunLifecycleDetect
func (mr *MockLifecycleDetectRunnerMockRecorder) RunLifecycleDetect() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunLifecycleDetect", reflect.TypeOf((*MockLifecycleDetectRunner)(nil).RunLifecycleDetect))
}
